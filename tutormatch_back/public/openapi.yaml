openapi: 3.0.1
info:
  title: Tutor Match
  description: API Resource from Tutor Match
  version: 1.0.0
paths:
  /student/{studentId}:
    get:
      tags:
      - students
      summary: Find student by ID
      description: Returns a Student by ID.  Nonintegers will simulate API error conditions
      operationId: getStudentById
      parameters:
      - name: studentId
        in: path
        description: ID of Student that needs to be fetched
        required: true
        schema:
          type: integer
          description: param ID of Student that needs to be fetched
          format: int64
      responses:
        default:
          description: The Student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Invalid ID supplied
        404:
          description: Student not found
  /student/Student:
    put:
      tags:
      - students
      summary: Update an existing Student
      operationId: updateStudent
      requestBody:
        description: Student object that needs to be added to the store
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Student not found
        405:
          description: Validation exception
    post:
      tags:
      - students
      summary: Add a new Student
      operationId: addStudent
      requestBody:
        description: Student object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        405:
          description: Invalid input
  /tutor/{tutorId}:
    get:
      tags:
      - tutors
      summary: Find Tutor by ID
      description: For valid response try integer IDs with value >= 1. Negative values will generated exceptions
      operationId: getTutorById
      parameters:
      - name: tutorId
        in: path
        description: ID of tutor to fetch
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tutor'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tutor'
        400:
          description: Invalid ID supplied
        404:
          description: Tutor not found
    delete:
      tags:
      - tutors
      summary: Delete Tutor by ID
      operationId: deleteTutor
      parameters:
      - name: tutorId
        in: path
        description: ID of Tutor to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
  /tutor/{name}:
    get:
      tags:
      - tutors
      summary: Get tutor by tutor name
      operationId: getTutorByName
      parameters:
      - name: name
        in: path
        description: 'The name that needs to be fetched. Use tutor1 for testing. '
        required: true
        schema:
          type: string
      responses:
        default:
          description: The tutor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tutor'
        400:
          description: tutor not found
  /tutor/Tutor:
    post:
      tags:
      - tutors
      summary: Create a tutor
      description: Create tutor.
      operationId: createTutor
      requestBody:
        description: Created tutor object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/tutor'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
            application/xml: {}
    put:
      tags:
      - tutors
      summary: Updated tutor
      description: Update a tutor.
      operationId: updatetutor
      parameters:
      - name: tutorname
        in: path
        description: name that need to be deleted
        required: true
        schema:
          type: string
      requestBody:
        description: Updated tutor object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/tutor'
        required: true
      responses:
        200:
          description: tutor updated
        400:
          description: Invalid tutor supplied
        404:
          description: tutor not found
    delete:
      tags:
      - tutors
      summary: Delete tutor
      description: This can only be done by the logged in tutor.
      operationId: deletetutor
      parameters:
      - name: tutorname
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        200:
          description: tutor deteled
        400:
          description: Invalid tutorname supplied
        404:
          description: tutor not found
components:
  schemas:
    Tutor:
      required:
      - name
      - title
      - contact
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        title:
          type: string
        contact:
          type: string
        picture:
          type: string
      xml:
        name: tutor
    Student:
      required:
      - name
      - email
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          description: Student status in the store
        tutors:
          $ref: '#/components/schemas/Tutor'
      xml:
        name: Student
