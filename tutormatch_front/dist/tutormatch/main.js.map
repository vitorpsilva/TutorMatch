{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/models/student.ts","webpack:///./src/app/models/tutor.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/student-create/student-create.component.css","webpack:///./src/app/student-create/student-create.component.html","webpack:///./src/app/student-create/student-create.component.ts","webpack:///./src/app/student-detail/student-detail.component.css","webpack:///./src/app/student-detail/student-detail.component.html","webpack:///./src/app/student-detail/student-detail.component.ts","webpack:///./src/app/student.guard.ts","webpack:///./src/app/student.service.ts","webpack:///./src/app/tutor-create/tutor-create.component.css","webpack:///./src/app/tutor-create/tutor-create.component.html","webpack:///./src/app/tutor-create/tutor-create.component.ts","webpack:///./src/app/tutor-detail/tutor-detail.component.css","webpack:///./src/app/tutor-detail/tutor-detail.component.html","webpack:///./src/app/tutor-detail/tutor-detail.component.ts","webpack:///./src/app/tutor.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentCreateComponent } from './student-create/student-create.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { StudentDetailComponent } from './student-detail/student-detail.component';\nimport { StudentGuard } from './student.guard';\nimport { TutorCreateComponent } from './tutor-create/tutor-create.component';\nimport { TutorDetailComponent } from './tutor-detail/tutor-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'student',\n    pathMatch: 'full'\n  },\n  {\n    path: 'student', component: StudentCreateComponent,\n  },\n  {\n    path: 'student/:id', component: StudentDetailComponent,\n    resolve: { student: StudentGuard },\n    children: [\n      {\n        path: 'tutor/new',\n        component: TutorCreateComponent,\n      },\n      {\n        path: 'tutor/:id',\n        component: TutorDetailComponent,\n      }\n    ]\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"py-5 text-center\\\">\\n    <h2>Tutor Match</h2>\\n    <p class=\\\"lead\\\">Below you can find and add the better Tutor(s) to your necessity. Enjoy!</p>\\n  </div>\\n  <div>\\n    <nav aria-label=\\\"breadcrumb\\\">\\n      <ol class=\\\"breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\">\\n          <a [routerLink]=\\\"['student']\\\">Student Register</a>\\n        </li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Student Detail</li>\\n      </ol>\\n    </nav>\\n  </div>\\n  <router-outlet></router-outlet>\\n  <br>\\n  <hr>\\n  <br>\\n  <!-- START FOOTER -->\\n  <footer class=\\\"my-5 pt-5 text-muted text-center text-small fixed-bottom\\\">\\n    <p class=\\\"mb-1\\\">&copy; 2018 Code Challenge</p>\\n  </footer>\\n  <!-- FINISH FOOTER -->\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TutorCreateComponent } from './tutor-create/tutor-create.component';\nimport { StudentCreateComponent } from './student-create/student-create.component';\nimport { TutorService } from './tutor.service';\nimport { TutorDetailComponent } from './tutor-detail/tutor-detail.component';\nimport { StudentDetailComponent } from './student-detail/student-detail.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { StudentService } from './student.service';\nimport { StudentGuard } from './student.guard';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TutorCreateComponent,\n    StudentCreateComponent,\n    TutorDetailComponent,\n    StudentDetailComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TutorService,\n    StudentService,\n    StudentGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Tutor } from './tutor';\n\nexport class Student {\n    id?: number;\n    name?: string;\n    email?: string;\n    tutors: Tutor[];\n}\n","import { Student } from './student';\n\nexport class Tutor {\n    id?: number;\n    name?: string;\n    title?: string;\n    contact?: string;\n    picture?: string;\n    students?: Student[];\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<pre>{{student | json}}</pre>\\n<h4 class=\\\"mb-3\\\">Student Register</h4>\\n<div>\\n  <form class=\\\"needs-validation\\\" novalidate #studentForm=\\\"ngForm\\\" (ngSubmit)=\\\"add(studentForm)\\\">\\n    <div class=\\\"mb-3\\\">\\n      <label for=\\\"name\\\">Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"\\\" value=\\\"\\\" required [(ngModel)]=\\\"student.name\\\" name=\\\"name\\\">\\n      <div class=\\\"invalid-feedback\\\">\\n        Valid first name is required.\\n      </div>\\n    </div>\\n    <div class=\\\"mb-3\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">@</span>\\n        </div>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"email\\\" required [(ngModel)]=\\\"student.email\\\" name=\\\"email\\\">\\n        <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\n          Your email is required.\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-outline-dark btn-lg\\\" type=\\\"submit\\\">CONFIRM</button>\\n    </div>\\n  </form>\\n</div>\\n<br>\\n<hr>\\n<br>\\n<div>\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Email</th>\\n        <th scope=\\\"col\\\">Created</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let student of students\\\">\\n        <th scope=\\\"row\\\">{{student.id}}</th>\\n        <td><a [routerLink]=\\\"[student.id]\\\">{{student.name}}</a></td>\\n        <td>{{student.email}}</td>\\n        <td>{{student.created_at | date: 'medium'}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Student } from '../models/student';\nimport { StudentService } from '../student.service';\n\n@Component({\n  selector: 'app-student-create',\n  templateUrl: './student-create.component.html',\n  styleUrls: ['./student-create.component.css']\n})\nexport class StudentCreateComponent implements OnInit {\n\n  student: Student;\n  students: Student[] = [];\n\n\n  constructor(private studentService: StudentService) { }\n\n  add(student: Student): void {\n    console.log(this.student);\n    if (!student) { return; }\n    this.studentService.addStudent(this.student)\n      .subscribe(newStudent => {\n        this.student = newStudent;\n        this.students.push(this.student);\n      });\n  }\n\n  listAllStudents(): void {\n    this.studentService.getStudents().subscribe(result => {\n      this.students = result;\n    });\n  }\n\n  ngOnInit() {\n    this.student = new Student();\n    this.listAllStudents();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- START STUDENT -->\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 order-md-1 mb-4\\\">\\n        <div class=\\\"blog-post\\\">\\n          <h2 class=\\\"blog-post-title\\\">{{student.name}}</h2>\\n          <p class=\\\"blog-post-meta\\\">{{student.created_at | date: 'medium'}}\\n            <a href=\\\"#\\\">{{student.email}}</a>\\n          </p>\\n        </div>\\n      </div>\\n      <!-- START DIV STUDENT'S TUTORS -->\\n      <div class=\\\"col-md-8 order-md-2\\\">\\n        <h4 class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n          <span class=\\\"text-muted\\\">Your Tutors</span>\\n          <span class=\\\"badge badge-secondary badge-pill\\\">{{student.tutors.length}}</span>\\n        </h4>\\n        <ul class=\\\"list-group mb-3\\\" *ngFor=\\\"let tutor of student.tutors\\\">\\n          <li class=\\\"list-group-item d-flex justify-content-between lh-condensed\\\">\\n            <div>\\n              <h6 class=\\\"my-0\\\">\\n                <a [routerLink]=\\\"['tutor', tutor.id]\\\">{{tutor.name}}</a>\\n              </h6>\\n              <small class=\\\"text-muted\\\">{{tutor.title}}</small>\\n            </div>\\n            <span class=\\\"text-muted\\\">Since: {{tutor.student_tutor.created_at | date: 'medium'}}</span>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeRelationship(tutor)\\\">REMOVE</button>\\n          </li>\\n        </ul>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n<!-- FINISH TUTOR LIST -->\\n<br>\\n<hr>\\n<br>\\n<!-- START TUTOR LIST COMPONENT-->\\n<div class=\\\"col-md-12\\\">\\n  <div class=\\\"row\\\">\\n    <!-- START TUTOR LIST -->\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"row\\\">\\n        <div div class=\\\"card-deck\\\" *ngFor=\\\"let tutor of tutors\\\">\\n          <div class=\\\"col-sm-3 text-center\\\" >\\n            <div class=\\\"card\\\" style=\\\"width: 17rem;\\\">\\n              <img class=\\\"card-img-top\\\" src=\\\"{{tutor.picture}}\\\" class=\\\"img-fluid img-thumbnail\\\" alt=\\\"Responsive image\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">\\n                  <a [routerLink]=\\\"['tutor', tutor.id]\\\">{{tutor.name}}</a>\\n                </h5>\\n                <p class=\\\"card-text\\\">{{tutor.title}}</p>\\n                <p class=\\\"card-text\\\">\\n                  <small class=\\\"text-muted\\\">{{tutor.contact}}</small>\\n                </p>\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"addRelationship(tutor)\\\">JOIN</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-block\\\" (click)=\\\"deleteTutor(tutor)\\\">DELETE</button>\\n              </div>\\n            </div>\\n            <br>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- FINISH TUTOR LIST -->\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <pre>{{tutor | json}}</pre>\\n\\n          <h4 class=\\\"mb-3\\\">Tutor Register</h4>\\n          <form class=\\\"needs-validation\\\" novalidate #tutorForm=\\\"ngForm\\\" (ngSubmit)=\\\"addTutor(tutorForm)\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 mb-3\\\">\\n                <label for=\\\"name\\\">Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"\\\" value=\\\"\\\" [(ngModel)]=\\\"tutor.name\\\" name=\\\"name\\\">\\n                <div class=\\\"invalid-feedback\\\">\\n                  Valid first name is required.\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 mb-3\\\">\\n                <label for=\\\"title\\\">Specialty</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"\\\" value=\\\"\\\" [(ngModel)]=\\\"tutor.title\\\" required name=\\\"title\\\">\\n                <div class=\\\"invalid-feedback\\\">\\n                  Valid last name is required.\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"mb-3\\\">\\n              <label for=\\\"linkedin\\\">Contact</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">@</span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact\\\" placeholder=\\\"Linkedin\\\" [(ngModel)]=\\\"tutor.contact\\\" required required\\n                  name=\\\"contact\\\">\\n                <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\n                  Your Linkedin is required.\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"mb-3\\\">\\n              <label for=\\\"image\\\">Your Image</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">:)</span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"picture\\\" placeholder=\\\"image\\\" [(ngModel)]=\\\"tutor.picture\\\" required name=\\\"picture\\\">\\n                <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\n                  Your Image is required.\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n            <button class=\\\"btn btn-dark btn-lg btn-block\\\" type=\\\"submit\\\">SAVE</button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- START TUTOR LIST COMPONENT-->\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '../../../node_modules/@angular/router';\nimport { StudentService } from '../student.service';\nimport { Student } from '../models/student';\nimport { Subscription } from '../../../node_modules/rxjs';\nimport { Tutor } from '../models/tutor';\nimport { TutorService } from '../tutor.service';\n\n@Component({\n  selector: 'app-student-detail',\n  templateUrl: './student-detail.component.html',\n  styleUrls: ['./student-detail.component.css']\n})\nexport class StudentDetailComponent implements OnInit, OnDestroy {\n\n  student: Student = new Student();\n  inscricao: Subscription;\n  tutors: Tutor[];\n  tutor: Tutor;\n\n  constructor(\n    private tutorService: TutorService,\n    private studentService: StudentService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) { }\n\n  getStudent(): void {\n    this.studentService.getStudent(this.student.id)\n      .subscribe(result => {\n        this.student = result;\n      });\n  }\n\n  getTutors(): void {\n    this.tutorService.getTutors()\n      .subscribe(tutors => this.tutors = tutors);\n  }\n\n  deleteTutor(tutor: Tutor): void {\n    this.tutorService.deleteTutor(tutor)\n      .subscribe(() => {\n        this.getStudent();\n        this.getTutors();\n      });\n  }\n\n  addRelationship(tutor: Tutor): void {\n    this.studentService.addTutorToStudent(this.student.id, tutor.id).subscribe(result => {\n      this.student = result;\n      this.getStudent();\n    });\n  }\n\n  addTutor(tutor: Tutor): void {\n    console.log(this.tutor);\n    if (!tutor) { return; }\n    this.tutorService.addTutor(this.tutor)\n      .subscribe(newTutor => {\n        this.tutor = newTutor;\n        console.log(this.tutor);\n        this.getTutors();\n        this.tutor = new Tutor();\n      });\n  }\n\n  removeRelationship(tutor: Tutor): void {\n    this.studentService.removeTutorToStudent(this.student.id, tutor.id).subscribe(result => {\n      this.student = result;\n      this.getStudent();\n    });\n    console.log(tutor, this.student.id);\n\n\n  }\n\n  ngOnInit() {\n    this.getTutors();\n    this.tutor = new Tutor();\n    this.inscricao = this.route.data.subscribe(\n      (info: { student: Student }) => {\n        console.log('Recebendo o obj Student do resolver');\n        this.student = info.student;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.inscricao.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StudentService } from './student.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n\n  constructor(private studentService: StudentService) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> | Promise<any> | any {\n\n    console.log('AlunoDetalheResolver');\n\n    const id = route.params['id'];\n\n    return this.studentService.getStudent(id);\n  }\n}\n","import { environment } from '../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Student } from './models/student';\nimport { MessageService } from './message.service';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n\n  private url = environment.apiUrl;  // URL to web api\n\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** GET Tutor from the server */\n  getStudents(): Observable<Student[]> {\n    return this.http.get<Student[]>(`${this.url}/student`)\n      .pipe(\n        tap(tutors => this.log('fetched tutors')),\n        catchError(this.handleError('getTutors', []))\n      );\n  }\n\n  /** GET tutor by id. Return `undefined` when id not found */\n  getStudentNo404<Data>(id: number): Observable<Student> {\n    const url = `${this.url}/student/${id}`;\n    return this.http.get<Student[]>(url)\n      .pipe(\n        map(tutors => tutors[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} tutor id=${id}`);\n        }),\n        catchError(this.handleError<Student>(`getTutor id=${id}`))\n      );\n  }\n\n  /** GET tutor by id. Will 404 if id not found */\n  getStudent(id: number): Observable<Student> {\n    const url = `${this.url}/student/${id}`;\n    return this.http.get<Student>(url).pipe(\n      tap(_ => this.log(`fetched tutor id=${id}`)),\n      catchError(this.handleError<Student>(`getStudent id=${id}`))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new tutor to the server */\n  addStudent(tutor: Student): Observable<Student> {\n    console.log(tutor);\n    return this.http.post(`${this.url}/student`, tutor, httpOptions).pipe(\n      tap((student: Student) => this.log(`added student w/ id=${student.id}`)),\n      catchError(this.handleError<Student>('addStudent'))\n    );\n  }\n\n  addTutorToStudent(studentId: number, tutorId: number): Observable<Student> {\n    return this.http.post(`${this.url}/student/tutor?studentId=${studentId}&tutorId=${tutorId}`, httpOptions).pipe(\n      tap(_ => this.log(`added relantinship`)),\n      catchError(this.handleError<any>('addTutorToStudent'))\n    );\n  }\n\n  removeTutorToStudent(studentId: number, tutorId: number): Observable<Student> {\n    return this.http.put(`${this.url}/student/tutor?studentId=${studentId}&tutorId=${tutorId}`, httpOptions).pipe(\n      tap(_ => this.log(`added relantinship`)),\n      catchError(this.handleError<any>('addTutorToStudent'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a TutorService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`StudentService: ${message}`);\n  }\n}\n","module.exports = \"\"","module.exports = \"<pre>{{tutor | json}}</pre>\\n\\n<h4 class=\\\"mb-3\\\">Tutor Register</h4>\\n<form class=\\\"needs-validation\\\" novalidate #tutorForm=\\\"ngForm\\\" (ngSubmit)=\\\"add(tutorForm)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 mb-3\\\">\\n      <label for=\\\"name\\\">Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"\\\" value=\\\"\\\"  [(ngModel)]=\\\"tutor.name\\\" name=\\\"name\\\">\\n      <div class=\\\"invalid-feedback\\\">\\n        Valid first name is required.\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 mb-3\\\">\\n      <label for=\\\"title\\\">Specialty</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"\\\" value=\\\"\\\" [(ngModel)]=\\\"tutor.title\\\" required name=\\\"title\\\">\\n      <div class=\\\"invalid-feedback\\\">\\n        Valid last name is required.\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"mb-3\\\">\\n    <label for=\\\"linkedin\\\">Contact</label>\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\">@</span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact\\\" placeholder=\\\"Linkedin\\\" [(ngModel)]=\\\"tutor.contact\\\" required required name=\\\"contact\\\">\\n      <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\n        Your Linkedin is required.\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"mb-3\\\">\\n      <label for=\\\"image\\\">Your Image</label>\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">:)</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"picture\\\" placeholder=\\\"image\\\" [(ngModel)]=\\\"tutor.picture\\\" required name=\\\"picture\\\"> \\n        <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\n          Your Image is required.\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n  <button class=\\\"btn btn-dark btn-lg btn-block\\\" type=\\\"submit\\\">SAVE</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { TutorService } from '../tutor.service';\nimport { Tutor } from '../models/tutor';\n\n\n\n@Component({\n  selector: 'app-tutor-create',\n  templateUrl: './tutor-create.component.html',\n  styleUrls: ['./tutor-create.component.css']\n})\nexport class TutorCreateComponent implements OnInit {\n\n  tutors: Tutor[] = [];\n\n  tutor: Tutor;\n\n  constructor(\n    private tutorService: TutorService) { }\n\n  add(tutor: Tutor): void {\n    console.log(this.tutor);\n    if (!tutor) { return; }\n    this.tutorService.addTutor(this.tutor)\n      .subscribe(newTutor => {\n        this.tutor = newTutor;\n        console.log(this.tutor);\n      });\n      this.tutors.push();\n  }\n\n  ngOnInit() {\n    this.tutor = new Tutor();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  tutor-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tutor-detail',\n  templateUrl: './tutor-detail.component.html',\n  styleUrls: ['./tutor-detail.component.css']\n})\nexport class TutorDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { environment } from '../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Tutor } from './models/tutor';\nimport { MessageService } from './message.service';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TutorService {\n\n\n  private url = environment.apiUrl;  // URL to web api\n\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** GET Tutor from the server */\n  getTutors(): Observable<Tutor[]> {\n    return this.http.get<Tutor[]>(`${this.url}/tutor`)\n      .pipe(\n        tap(tutors => this.log('fetched tutors')),\n        catchError(this.handleError('getTutors', []))\n      );\n  }\n\n  /** GET tutor by id. Return `undefined` when id not found */\n  getTutorNo404<Data>(id: number): Observable<Tutor> {\n    const url = `${this.url}/tutor/${id}`;\n    return this.http.get<Tutor[]>(url)\n      .pipe(\n        map(tutors => tutors[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} tutor id=${id}`);\n        }),\n        catchError(this.handleError<Tutor>(`getTutor id=${id}`))\n      );\n  }\n\n  /** GET tutor by id. Will 404 if id not found */\n  getTutor(id: number): Observable<Tutor> {\n    const url = `${this.url}/${id}`;\n    return this.http.get<Tutor>(url).pipe(\n      tap(_ => this.log(`fetched tutor id=${id}`)),\n      catchError(this.handleError<Tutor>(`getTutor id=${id}`))\n    );\n  }\n\n  /* GET Tutor whose name contains search term */\n  searchTutor(term: string): Observable<Tutor[]> {\n    if (!term.trim()) {\n      // if not search term, return empty tutor array.\n      return of([]);\n    }\n    return this.http.get<Tutor[]>(`${this.url}/?name=${term}`).pipe(\n      tap(_ => this.log(`found Tutor matching \"${term}\"`)),\n      catchError(this.handleError<Tutor[]>('searchTutor', []))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new tutor to the server */\n  addTutor(tutor: Tutor): Observable<Tutor> {\n    console.log(tutor);\n    return this.http.post(`${this.url}/tutor`, tutor, httpOptions).pipe(\n      tap((tutor2: Tutor) => this.log(`added tutor w/ id=${tutor2.id}`)),\n      catchError(this.handleError<Tutor>('addTutor'))\n    );\n  }\n\n  /** DELETE: delete the tutor from the server */\n  deleteTutor(tutor: Tutor | number): Observable<Tutor> {\n    const id = typeof tutor === 'number' ? tutor : tutor.id;\n    const url = `${this.url}/tutor/${id}`;\n\n    return this.http.delete<Tutor>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted tutor id=${id}`)),\n      catchError(this.handleError<Tutor>('deleteTutor'))\n    );\n  }\n\n  /** PUT: update the tutor on the server */\n  updateTutor(tutor: Tutor): Observable<any> {\n    return this.http.put(this.url, tutor, httpOptions).pipe(\n      tap(_ => this.log(`updated tutor id=${tutor.id}`)),\n      catchError(this.handleError<any>('updateTutor'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a TutorService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`TutorService: ${message}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}